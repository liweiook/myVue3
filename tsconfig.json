{
  "compilerOptions": {
    // 编译之后的版本目录
    "target": "esnext",
    "useDefineForClassFields": true,
    // 要使用的模板标准
    "module": "esnext",
    // 选择模块解析策略，有"node"和"classic"两种类型
    "moduleResolution": "node",
    // 是否启动所有类型检查，如果设为true会同时开启几个严格检查，默认为false
    "strict": true,
    // jsx代码用于的开发环境:'preserve','react-native',or 'react
    "jsx": "preserve",
    // 编译时是否生成.map文件
    "sourceMap": true,
    "resolveJsonModule": true,
    // 通过导入内容创建命名空间，实现CommonJS和ES模块之间的互操作性
    "esModuleInterop": true,
    "baseUrl": "./",
    // 路径映射
    "paths": {
      "@/*": ["src/*"]
    },
    // 要包含在编译中的库文件
    "lib": ["esnext", "dom"],
    // 忽略声明文件（ *.d.ts）的类型检查。
    "skipLibCheck": true,
    // 指定需要包含的模块，只有在这里列出的模块的声明文件才会被加载
    "types": ["vite/client", "jest"]
  },
  "include": [
    "src/**/*.ts",
    "tests/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "env.d.ts"
  ]
}
